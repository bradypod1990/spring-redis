<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/cache
        http://www.springframework.org/schema/cache/spring-cache.xsd
      ">
	<context:property-placeholder location="classpath:redis.properties" />
	<!-- <import resource="jdbc.properties"/> -->

	<context:component-scan base-package="com.feng">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	
	
	
	 <!-- 启用缓存注解功能，这个是必须的，否则注解不会生效，另外，该注解一定要声明在spring主配置文件中才会生效 -->  
    <cache:annotation-driven cache-manager="cacheManager"/>  
  		
   <!-- 自定义key生成器 -->
    <bean id="myKeyGenerator" class="com.feng.redis.MyKeyGenerator"></bean>
    <!-- spring自己的换管理器，这里定义了两个缓存位置名称 ，既注解中的value -->  
    <bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">  
        <property name="caches">  
            <set>  
                <bean class="com.feng.redis.RedisCache">  
                    <property name="redisTemplate" ref="redisTemplate" />  
                    <property name="name" value="redis1"/>  
                </bean>  
                <!--  <bean class="com.feng.redis.RedisCache">  
                    <property name="redisTemplate" ref="redisTemplate2" />  
                    <property name="name" value="redis2"/>  
                </bean>   -->
            </set>  
        </property>  
    </bean>  
  
<!--redis 相关配置  --> 
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">  
        <property name="maxIdle" value="${redis.maxIdle}" />        
        <property name="maxWaitMillis" value="${redis.maxWait}" />  
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />  
    </bean>  
  
    <bean id="connectionFactory"  
        class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"  
        p:host-name="${redis.host}" p:port="${redis.port}" p:pool-config-ref="poolConfig"  p:password="${redis.password}" 
        p:database="${redis.database}" />  
  
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">  
        <property name="connectionFactory" ref="connectionFactory" />  
    </bean>  
    
    <!--  <bean id="connectionFactory2"  
        class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"  
        p:host-name="${redis.host2}" p:port="${redis.port2}" p:pool-config-ref="poolConfig"  p:password="${redis.password}" 
        p:database="${redis.database}" />  
  
    <bean id="redisTemplate2" class="org.springframework.data.redis.core.RedisTemplate">  
        <property name="connectionFactory" ref="connectionFactory2" />  
    </bean> -->
	
    <import resource="spring-hibernate.xml"/>
  
</beans>